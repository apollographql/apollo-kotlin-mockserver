[{"name":"abstract fun close()","description":"com.apollographql.mockserver.WebSocketBody.close","location":"apollo-mockserver/com.apollographql.mockserver/-web-socket-body/close.html","searchKeys":["close","abstract fun close()","com.apollographql.mockserver.WebSocketBody.close"]},{"name":"abstract fun enqueue(mockResponse: MockResponse)","description":"com.apollographql.mockserver.MockServer.enqueue","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/enqueue.html","searchKeys":["enqueue","abstract fun enqueue(mockResponse: MockResponse)","com.apollographql.mockserver.MockServer.enqueue"]},{"name":"abstract fun enqueueDelay(delayMillis: Long)","description":"com.apollographql.mockserver.MultipartBody.enqueueDelay","location":"apollo-mockserver/com.apollographql.mockserver/-multipart-body/enqueue-delay.html","searchKeys":["enqueueDelay","abstract fun enqueueDelay(delayMillis: Long)","com.apollographql.mockserver.MultipartBody.enqueueDelay"]},{"name":"abstract fun enqueueMessage(message: WebSocketMessage)","description":"com.apollographql.mockserver.WebSocketBody.enqueueMessage","location":"apollo-mockserver/com.apollographql.mockserver/-web-socket-body/enqueue-message.html","searchKeys":["enqueueMessage","abstract fun enqueueMessage(message: WebSocketMessage)","com.apollographql.mockserver.WebSocketBody.enqueueMessage"]},{"name":"abstract fun enqueuePart(bytes: ByteString, isLast: Boolean)","description":"com.apollographql.mockserver.MultipartBody.enqueuePart","location":"apollo-mockserver/com.apollographql.mockserver/-multipart-body/enqueue-part.html","searchKeys":["enqueuePart","abstract fun enqueuePart(bytes: ByteString, isLast: Boolean)","com.apollographql.mockserver.MultipartBody.enqueuePart"]},{"name":"abstract fun handle(request: MockRequestBase): MockResponse","description":"com.apollographql.mockserver.MockServerHandler.handle","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server-handler/handle.html","searchKeys":["handle","abstract fun handle(request: MockRequestBase): MockResponse","com.apollographql.mockserver.MockServerHandler.handle"]},{"name":"abstract fun listen(block: (socket: TcpSocket) -> Unit)","description":"com.apollographql.mockserver.TcpServer.listen","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-server/listen.html","searchKeys":["listen","abstract fun listen(block: (socket: TcpSocket) -> Unit)","com.apollographql.mockserver.TcpServer.listen"]},{"name":"abstract fun onMessage(message: WebSocketMessage)","description":"com.apollographql.mockserver.MockServer.Listener.onMessage","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-listener/on-message.html","searchKeys":["onMessage","abstract fun onMessage(message: WebSocketMessage)","com.apollographql.mockserver.MockServer.Listener.onMessage"]},{"name":"abstract fun onRequest(request: MockRequestBase)","description":"com.apollographql.mockserver.MockServer.Listener.onRequest","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-listener/on-request.html","searchKeys":["onRequest","abstract fun onRequest(request: MockRequestBase)","com.apollographql.mockserver.MockServer.Listener.onRequest"]},{"name":"abstract fun send(data: ByteArray)","description":"com.apollographql.mockserver.TcpSocket.send","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-socket/send.html","searchKeys":["send","abstract fun send(data: ByteArray)","com.apollographql.mockserver.TcpSocket.send"]},{"name":"abstract fun takeRequest(): MockRequest","description":"com.apollographql.mockserver.MockServer.takeRequest","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/take-request.html","searchKeys":["takeRequest","abstract fun takeRequest(): MockRequest","com.apollographql.mockserver.MockServer.takeRequest"]},{"name":"abstract override fun close()","description":"com.apollographql.mockserver.MockServer.close","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/close.html","searchKeys":["close","abstract override fun close()","com.apollographql.mockserver.MockServer.close"]},{"name":"abstract override fun close()","description":"com.apollographql.mockserver.TcpServer.close","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-server/close.html","searchKeys":["close","abstract override fun close()","com.apollographql.mockserver.TcpServer.close"]},{"name":"abstract override fun close()","description":"com.apollographql.mockserver.TcpSocket.close","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-socket/close.html","searchKeys":["close","abstract override fun close()","com.apollographql.mockserver.TcpSocket.close"]},{"name":"abstract suspend fun address(): Address","description":"com.apollographql.mockserver.TcpServer.address","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-server/address.html","searchKeys":["address","abstract suspend fun address(): Address","com.apollographql.mockserver.TcpServer.address"]},{"name":"abstract suspend fun awaitAnyRequest(timeout: Duration = 1.seconds): MockRequestBase","description":"com.apollographql.mockserver.MockServer.awaitAnyRequest","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/await-any-request.html","searchKeys":["awaitAnyRequest","abstract suspend fun awaitAnyRequest(timeout: Duration = 1.seconds): MockRequestBase","com.apollographql.mockserver.MockServer.awaitAnyRequest"]},{"name":"abstract suspend fun port(): Int","description":"com.apollographql.mockserver.MockServer.port","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/port.html","searchKeys":["port","abstract suspend fun port(): Int","com.apollographql.mockserver.MockServer.port"]},{"name":"abstract suspend fun receive(): ByteArray","description":"com.apollographql.mockserver.TcpSocket.receive","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-socket/receive.html","searchKeys":["receive","abstract suspend fun receive(): ByteArray","com.apollographql.mockserver.TcpSocket.receive"]},{"name":"abstract suspend fun url(): String","description":"com.apollographql.mockserver.MockServer.url","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/url.html","searchKeys":["url","abstract suspend fun url(): String","com.apollographql.mockserver.MockServer.url"]},{"name":"abstract val headers: Map<String, String>","description":"com.apollographql.mockserver.MockRequestBase.headers","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request-base/headers.html","searchKeys":["headers","abstract val headers: Map<String, String>","com.apollographql.mockserver.MockRequestBase.headers"]},{"name":"abstract val method: String","description":"com.apollographql.mockserver.MockRequestBase.method","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request-base/method.html","searchKeys":["method","abstract val method: String","com.apollographql.mockserver.MockRequestBase.method"]},{"name":"abstract val path: String","description":"com.apollographql.mockserver.MockRequestBase.path","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request-base/path.html","searchKeys":["path","abstract val path: String","com.apollographql.mockserver.MockRequestBase.path"]},{"name":"abstract val version: String","description":"com.apollographql.mockserver.MockRequestBase.version","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request-base/version.html","searchKeys":["version","abstract val version: String","com.apollographql.mockserver.MockRequestBase.version"]},{"name":"class Address(val hostname: String, val port: Int)","description":"com.apollographql.mockserver.Address","location":"apollo-mockserver/com.apollographql.mockserver/-address/index.html","searchKeys":["Address","class Address(val hostname: String, val port: Int)","com.apollographql.mockserver.Address"]},{"name":"class Builder","description":"com.apollographql.mockserver.MockResponse.Builder","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/index.html","searchKeys":["Builder","class Builder","com.apollographql.mockserver.MockResponse.Builder"]},{"name":"class Builder","description":"com.apollographql.mockserver.MockServer.Builder","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/index.html","searchKeys":["Builder","class Builder","com.apollographql.mockserver.MockServer.Builder"]},{"name":"class CloseFrame(val code: Int?, val reason: String?) : WebSocketMessage","description":"com.apollographql.mockserver.CloseFrame","location":"apollo-mockserver/com.apollographql.mockserver/-close-frame/index.html","searchKeys":["CloseFrame","class CloseFrame(val code: Int?, val reason: String?) : WebSocketMessage","com.apollographql.mockserver.CloseFrame"]},{"name":"class DataMessage(val data: ByteArray) : WebSocketMessage","description":"com.apollographql.mockserver.DataMessage","location":"apollo-mockserver/com.apollographql.mockserver/-data-message/index.html","searchKeys":["DataMessage","class DataMessage(val data: ByteArray) : WebSocketMessage","com.apollographql.mockserver.DataMessage"]},{"name":"class KtorTcpServer(port: Int = 0, acceptDelayMillis: Int = 0, dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.apollographql.mockserver.KtorTcpServer","location":"apollo-mockserver/com.apollographql.mockserver/-ktor-tcp-server/index.html","searchKeys":["KtorTcpServer","class KtorTcpServer(port: Int = 0, acceptDelayMillis: Int = 0, dispatcher: CoroutineDispatcher = Dispatchers.IO)","com.apollographql.mockserver.KtorTcpServer"]},{"name":"class MockRequest(val method: String, val path: String, val version: String, val headers: Map<String, String> = emptyMap(), val body: ByteString = ByteString.EMPTY) : MockRequestBase","description":"com.apollographql.mockserver.MockRequest","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/index.html","searchKeys":["MockRequest","class MockRequest(val method: String, val path: String, val version: String, val headers: Map<String, String> = emptyMap(), val body: ByteString = ByteString.EMPTY) : MockRequestBase","com.apollographql.mockserver.MockRequest"]},{"name":"class MockResponse","description":"com.apollographql.mockserver.MockResponse","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/index.html","searchKeys":["MockResponse","class MockResponse","com.apollographql.mockserver.MockResponse"]},{"name":"class TextMessage(val text: String) : WebSocketMessage","description":"com.apollographql.mockserver.TextMessage","location":"apollo-mockserver/com.apollographql.mockserver/-text-message/index.html","searchKeys":["TextMessage","class TextMessage(val text: String) : WebSocketMessage","com.apollographql.mockserver.TextMessage"]},{"name":"class WebsocketMockRequest(val method: String, val path: String, val version: String, val headers: Map<String, String> = emptyMap()) : MockRequestBase","description":"com.apollographql.mockserver.WebsocketMockRequest","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/index.html","searchKeys":["WebsocketMockRequest","class WebsocketMockRequest(val method: String, val path: String, val version: String, val headers: Map<String, String> = emptyMap()) : MockRequestBase","com.apollographql.mockserver.WebsocketMockRequest"]},{"name":"const val VERSION: String","description":"com.apollographql.mockserver.VERSION","location":"apollo-mockserver/com.apollographql.mockserver/-v-e-r-s-i-o-n.html","searchKeys":["VERSION","const val VERSION: String","com.apollographql.mockserver.VERSION"]},{"name":"constructor()","description":"com.apollographql.mockserver.MockResponse.Builder.Builder","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/-builder.html","searchKeys":["Builder","constructor()","com.apollographql.mockserver.MockResponse.Builder.Builder"]},{"name":"constructor()","description":"com.apollographql.mockserver.MockServer.Builder.Builder","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/-builder.html","searchKeys":["Builder","constructor()","com.apollographql.mockserver.MockServer.Builder.Builder"]},{"name":"constructor(code: Int?, reason: String?)","description":"com.apollographql.mockserver.CloseFrame.CloseFrame","location":"apollo-mockserver/com.apollographql.mockserver/-close-frame/-close-frame.html","searchKeys":["CloseFrame","constructor(code: Int?, reason: String?)","com.apollographql.mockserver.CloseFrame.CloseFrame"]},{"name":"constructor(data: ByteArray)","description":"com.apollographql.mockserver.DataMessage.DataMessage","location":"apollo-mockserver/com.apollographql.mockserver/-data-message/-data-message.html","searchKeys":["DataMessage","constructor(data: ByteArray)","com.apollographql.mockserver.DataMessage.DataMessage"]},{"name":"constructor(hostname: String, port: Int)","description":"com.apollographql.mockserver.Address.Address","location":"apollo-mockserver/com.apollographql.mockserver/-address/-address.html","searchKeys":["Address","constructor(hostname: String, port: Int)","com.apollographql.mockserver.Address.Address"]},{"name":"constructor(method: String, path: String, version: String, headers: Map<String, String> = emptyMap())","description":"com.apollographql.mockserver.WebsocketMockRequest.WebsocketMockRequest","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/-websocket-mock-request.html","searchKeys":["WebsocketMockRequest","constructor(method: String, path: String, version: String, headers: Map<String, String> = emptyMap())","com.apollographql.mockserver.WebsocketMockRequest.WebsocketMockRequest"]},{"name":"constructor(method: String, path: String, version: String, headers: Map<String, String> = emptyMap(), body: ByteString = ByteString.EMPTY)","description":"com.apollographql.mockserver.MockRequest.MockRequest","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/-mock-request.html","searchKeys":["MockRequest","constructor(method: String, path: String, version: String, headers: Map<String, String> = emptyMap(), body: ByteString = ByteString.EMPTY)","com.apollographql.mockserver.MockRequest.MockRequest"]},{"name":"constructor(port: Int = 0, acceptDelayMillis: Int = 0, dispatcher: CoroutineDispatcher = Dispatchers.IO)","description":"com.apollographql.mockserver.KtorTcpServer.KtorTcpServer","location":"apollo-mockserver/com.apollographql.mockserver/-ktor-tcp-server/-ktor-tcp-server.html","searchKeys":["KtorTcpServer","constructor(port: Int = 0, acceptDelayMillis: Int = 0, dispatcher: CoroutineDispatcher = Dispatchers.IO)","com.apollographql.mockserver.KtorTcpServer.KtorTcpServer"]},{"name":"constructor(statusCode: Int = 200, body: Flow<ByteString> = emptyFlow(), headers: Map<String, String> = mapOf(\"Content-Length\" to \"0\"), delayMillis: Long = 0)","description":"com.apollographql.mockserver.MockResponse.MockResponse","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-mock-response.html","searchKeys":["MockResponse","constructor(statusCode: Int = 200, body: Flow<ByteString> = emptyFlow(), headers: Map<String, String> = mapOf(\"Content-Length\" to \"0\"), delayMillis: Long = 0)","com.apollographql.mockserver.MockResponse.MockResponse"]},{"name":"constructor(text: String)","description":"com.apollographql.mockserver.TextMessage.TextMessage","location":"apollo-mockserver/com.apollographql.mockserver/-text-message/-text-message.html","searchKeys":["TextMessage","constructor(text: String)","com.apollographql.mockserver.TextMessage.TextMessage"]},{"name":"expect fun TcpServer(port: Int): TcpServer","description":"com.apollographql.mockserver.TcpServer","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-server.html","searchKeys":["TcpServer","expect fun TcpServer(port: Int): TcpServer","com.apollographql.mockserver.TcpServer"]},{"name":"fun Map<String, String>.headerValueOf(name: String): String?","description":"com.apollographql.mockserver.headerValueOf","location":"apollo-mockserver/com.apollographql.mockserver/header-value-of.html","searchKeys":["headerValueOf","fun Map<String, String>.headerValueOf(name: String): String?","com.apollographql.mockserver.headerValueOf"]},{"name":"fun MockServer(): MockServer","description":"com.apollographql.mockserver.MockServer","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server.html","searchKeys":["MockServer","fun MockServer(): MockServer","com.apollographql.mockserver.MockServer"]},{"name":"fun MockServer(handler: MockServerHandler): MockServer","description":"com.apollographql.mockserver.MockServer","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server.html","searchKeys":["MockServer","fun MockServer(handler: MockServerHandler): MockServer","com.apollographql.mockserver.MockServer"]},{"name":"fun MockServer.assertNoRequest()","description":"com.apollographql.mockserver.assertNoRequest","location":"apollo-mockserver/com.apollographql.mockserver/assert-no-request.html","searchKeys":["assertNoRequest","fun MockServer.assertNoRequest()","com.apollographql.mockserver.assertNoRequest"]},{"name":"fun MockServer.enqueue(string: String = \"\", delayMs: Long = 0, statusCode: Int = 200)","description":"com.apollographql.mockserver.enqueue","location":"apollo-mockserver/com.apollographql.mockserver/enqueue.html","searchKeys":["enqueue","fun MockServer.enqueue(string: String = \"\", delayMs: Long = 0, statusCode: Int = 200)","com.apollographql.mockserver.enqueue"]},{"name":"fun MockServer.enqueueError(statusCode: Int)","description":"com.apollographql.mockserver.enqueueError","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-error.html","searchKeys":["enqueueError","fun MockServer.enqueueError(statusCode: Int)","com.apollographql.mockserver.enqueueError"]},{"name":"fun MockServer.enqueueGraphQLString(string: String, delayMs: Long = 0)","description":"com.apollographql.mockserver.enqueueGraphQLString","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-graph-q-l-string.html","searchKeys":["enqueueGraphQLString","fun MockServer.enqueueGraphQLString(string: String, delayMs: Long = 0)","com.apollographql.mockserver.enqueueGraphQLString"]},{"name":"fun MockServer.enqueueMultipart(parts: List<String>): Nothing","description":"com.apollographql.mockserver.enqueueMultipart","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-multipart.html","searchKeys":["enqueueMultipart","fun MockServer.enqueueMultipart(parts: List<String>): Nothing","com.apollographql.mockserver.enqueueMultipart"]},{"name":"fun MockServer.enqueueMultipart(partsContentType: String, headers: Map<String, String> = emptyMap(), boundary: String = \"-\"): MultipartBody","description":"com.apollographql.mockserver.enqueueMultipart","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-multipart.html","searchKeys":["enqueueMultipart","fun MockServer.enqueueMultipart(partsContentType: String, headers: Map<String, String> = emptyMap(), boundary: String = \"-\"): MultipartBody","com.apollographql.mockserver.enqueueMultipart"]},{"name":"fun MockServer.enqueueString(string: String = \"\", delayMs: Long = 0, statusCode: Int = 200, contentType: String = \"text/plain\")","description":"com.apollographql.mockserver.enqueueString","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-string.html","searchKeys":["enqueueString","fun MockServer.enqueueString(string: String = \"\", delayMs: Long = 0, statusCode: Int = 200, contentType: String = \"text/plain\")","com.apollographql.mockserver.enqueueString"]},{"name":"fun MockServer.enqueueWebSocket(statusCode: Int = 101, headers: Map<String, String> = emptyMap(), keepAlive: Boolean = true): WebSocketBody","description":"com.apollographql.mockserver.enqueueWebSocket","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-web-socket.html","searchKeys":["enqueueWebSocket","fun MockServer.enqueueWebSocket(statusCode: Int = 101, headers: Map<String, String> = emptyMap(), keepAlive: Boolean = true): WebSocketBody","com.apollographql.mockserver.enqueueWebSocket"]},{"name":"fun MultipartBody.enqueueStrings(parts: List<String>, responseDelayMillis: Long = 0, chunksDelayMillis: Long = 0)","description":"com.apollographql.mockserver.enqueueStrings","location":"apollo-mockserver/com.apollographql.mockserver/enqueue-strings.html","searchKeys":["enqueueStrings","fun MultipartBody.enqueueStrings(parts: List<String>, responseDelayMillis: Long = 0, chunksDelayMillis: Long = 0)","com.apollographql.mockserver.enqueueStrings"]},{"name":"fun addHeader(key: String, value: String): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.addHeader","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/add-header.html","searchKeys":["addHeader","fun addHeader(key: String, value: String): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.addHeader"]},{"name":"fun body(body: ByteString): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.body","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/body.html","searchKeys":["body","fun body(body: ByteString): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.body"]},{"name":"fun body(body: Flow<ByteString>): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.body","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/body.html","searchKeys":["body","fun body(body: Flow<ByteString>): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.body"]},{"name":"fun body(body: String): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.body","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/body.html","searchKeys":["body","fun body(body: String): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.body"]},{"name":"fun build(): MockResponse","description":"com.apollographql.mockserver.MockResponse.Builder.build","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/build.html","searchKeys":["build","fun build(): MockResponse","com.apollographql.mockserver.MockResponse.Builder.build"]},{"name":"fun build(): MockServer","description":"com.apollographql.mockserver.MockServer.Builder.build","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/build.html","searchKeys":["build","fun build(): MockServer","com.apollographql.mockserver.MockServer.Builder.build"]},{"name":"fun delayMillis(delayMillis: Long): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.delayMillis","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/delay-millis.html","searchKeys":["delayMillis","fun delayMillis(delayMillis: Long): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.delayMillis"]},{"name":"fun handlePings(handlePings: Boolean): MockServer.Builder","description":"com.apollographql.mockserver.MockServer.Builder.handlePings","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/handle-pings.html","searchKeys":["handlePings","fun handlePings(handlePings: Boolean): MockServer.Builder","com.apollographql.mockserver.MockServer.Builder.handlePings"]},{"name":"fun handler(handler: MockServerHandler): MockServer.Builder","description":"com.apollographql.mockserver.MockServer.Builder.handler","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/handler.html","searchKeys":["handler","fun handler(handler: MockServerHandler): MockServer.Builder","com.apollographql.mockserver.MockServer.Builder.handler"]},{"name":"fun headers(headers: Map<String, String>): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.headers","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/headers.html","searchKeys":["headers","fun headers(headers: Map<String, String>): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.headers"]},{"name":"fun keepAlive(keepAlive: Boolean): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.keepAlive","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/keep-alive.html","searchKeys":["keepAlive","fun keepAlive(keepAlive: Boolean): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.keepAlive"]},{"name":"fun listener(listener: MockServer.Listener): MockServer.Builder","description":"com.apollographql.mockserver.MockServer.Builder.listener","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/listener.html","searchKeys":["listener","fun listener(listener: MockServer.Listener): MockServer.Builder","com.apollographql.mockserver.MockServer.Builder.listener"]},{"name":"fun newBuilder(): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.newBuilder","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/new-builder.html","searchKeys":["newBuilder","fun newBuilder(): MockResponse.Builder","com.apollographql.mockserver.MockResponse.newBuilder"]},{"name":"fun port(port: Int): MockServer.Builder","description":"com.apollographql.mockserver.MockServer.Builder.port","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/port.html","searchKeys":["port","fun port(port: Int): MockServer.Builder","com.apollographql.mockserver.MockServer.Builder.port"]},{"name":"fun statusCode(statusCode: Int): MockResponse.Builder","description":"com.apollographql.mockserver.MockResponse.Builder.statusCode","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/-builder/status-code.html","searchKeys":["statusCode","fun statusCode(statusCode: Int): MockResponse.Builder","com.apollographql.mockserver.MockResponse.Builder.statusCode"]},{"name":"fun tcpServer(tcpServer: TcpServer): MockServer.Builder","description":"com.apollographql.mockserver.MockServer.Builder.tcpServer","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-builder/tcp-server.html","searchKeys":["tcpServer","fun tcpServer(tcpServer: TcpServer): MockServer.Builder","com.apollographql.mockserver.MockServer.Builder.tcpServer"]},{"name":"interface Listener","description":"com.apollographql.mockserver.MockServer.Listener","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/-listener/index.html","searchKeys":["Listener","interface Listener","com.apollographql.mockserver.MockServer.Listener"]},{"name":"interface MockRequestBase","description":"com.apollographql.mockserver.MockRequestBase","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request-base/index.html","searchKeys":["MockRequestBase","interface MockRequestBase","com.apollographql.mockserver.MockRequestBase"]},{"name":"interface MockServer : Closeable","description":"com.apollographql.mockserver.MockServer","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/index.html","searchKeys":["MockServer","interface MockServer : Closeable","com.apollographql.mockserver.MockServer"]},{"name":"interface MockServerHandler","description":"com.apollographql.mockserver.MockServerHandler","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server-handler/index.html","searchKeys":["MockServerHandler","interface MockServerHandler","com.apollographql.mockserver.MockServerHandler"]},{"name":"interface MultipartBody","description":"com.apollographql.mockserver.MultipartBody","location":"apollo-mockserver/com.apollographql.mockserver/-multipart-body/index.html","searchKeys":["MultipartBody","interface MultipartBody","com.apollographql.mockserver.MultipartBody"]},{"name":"interface TcpServer : Closeable","description":"com.apollographql.mockserver.TcpServer","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-server/index.html","searchKeys":["TcpServer","interface TcpServer : Closeable","com.apollographql.mockserver.TcpServer"]},{"name":"interface TcpSocket : Closeable","description":"com.apollographql.mockserver.TcpSocket","location":"apollo-mockserver/com.apollographql.mockserver/-tcp-socket/index.html","searchKeys":["TcpSocket","interface TcpSocket : Closeable","com.apollographql.mockserver.TcpSocket"]},{"name":"interface WebSocketBody","description":"com.apollographql.mockserver.WebSocketBody","location":"apollo-mockserver/com.apollographql.mockserver/-web-socket-body/index.html","searchKeys":["WebSocketBody","interface WebSocketBody","com.apollographql.mockserver.WebSocketBody"]},{"name":"object PingFrame : WebSocketMessage","description":"com.apollographql.mockserver.PingFrame","location":"apollo-mockserver/com.apollographql.mockserver/-ping-frame/index.html","searchKeys":["PingFrame","object PingFrame : WebSocketMessage","com.apollographql.mockserver.PingFrame"]},{"name":"object PongFrame : WebSocketMessage","description":"com.apollographql.mockserver.PongFrame","location":"apollo-mockserver/com.apollographql.mockserver/-pong-frame/index.html","searchKeys":["PongFrame","object PongFrame : WebSocketMessage","com.apollographql.mockserver.PongFrame"]},{"name":"open fun close()","description":"com.apollographql.mockserver.KtorTcpServer.close","location":"apollo-mockserver/com.apollographql.mockserver/-ktor-tcp-server/close.html","searchKeys":["close","open fun close()","com.apollographql.mockserver.KtorTcpServer.close"]},{"name":"open fun listen(block: (<Error class: unknown class>) -> Unit)","description":"com.apollographql.mockserver.KtorTcpServer.listen","location":"apollo-mockserver/com.apollographql.mockserver/-ktor-tcp-server/listen.html","searchKeys":["listen","open fun listen(block: (<Error class: unknown class>) -> Unit)","com.apollographql.mockserver.KtorTcpServer.listen"]},{"name":"open override val headers: Map<String, String>","description":"com.apollographql.mockserver.MockRequest.headers","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/headers.html","searchKeys":["headers","open override val headers: Map<String, String>","com.apollographql.mockserver.MockRequest.headers"]},{"name":"open override val headers: Map<String, String>","description":"com.apollographql.mockserver.WebsocketMockRequest.headers","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/headers.html","searchKeys":["headers","open override val headers: Map<String, String>","com.apollographql.mockserver.WebsocketMockRequest.headers"]},{"name":"open override val method: String","description":"com.apollographql.mockserver.MockRequest.method","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/method.html","searchKeys":["method","open override val method: String","com.apollographql.mockserver.MockRequest.method"]},{"name":"open override val method: String","description":"com.apollographql.mockserver.WebsocketMockRequest.method","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/method.html","searchKeys":["method","open override val method: String","com.apollographql.mockserver.WebsocketMockRequest.method"]},{"name":"open override val path: String","description":"com.apollographql.mockserver.MockRequest.path","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/path.html","searchKeys":["path","open override val path: String","com.apollographql.mockserver.MockRequest.path"]},{"name":"open override val path: String","description":"com.apollographql.mockserver.WebsocketMockRequest.path","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/path.html","searchKeys":["path","open override val path: String","com.apollographql.mockserver.WebsocketMockRequest.path"]},{"name":"open override val version: String","description":"com.apollographql.mockserver.MockRequest.version","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/version.html","searchKeys":["version","open override val version: String","com.apollographql.mockserver.MockRequest.version"]},{"name":"open override val version: String","description":"com.apollographql.mockserver.WebsocketMockRequest.version","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/version.html","searchKeys":["version","open override val version: String","com.apollographql.mockserver.WebsocketMockRequest.version"]},{"name":"open suspend fun address(): <Error class: unknown class>","description":"com.apollographql.mockserver.KtorTcpServer.address","location":"apollo-mockserver/com.apollographql.mockserver/-ktor-tcp-server/address.html","searchKeys":["address","open suspend fun address(): <Error class: unknown class>","com.apollographql.mockserver.KtorTcpServer.address"]},{"name":"open suspend fun stop()","description":"com.apollographql.mockserver.MockServer.stop","location":"apollo-mockserver/com.apollographql.mockserver/-mock-server/stop.html","searchKeys":["stop","open suspend fun stop()","com.apollographql.mockserver.MockServer.stop"]},{"name":"sealed interface WebSocketMessage","description":"com.apollographql.mockserver.WebSocketMessage","location":"apollo-mockserver/com.apollographql.mockserver/-web-socket-message/index.html","searchKeys":["WebSocketMessage","sealed interface WebSocketMessage","com.apollographql.mockserver.WebSocketMessage"]},{"name":"suspend fun MockServer.awaitRequest(timeout: Duration = 30.seconds): MockRequest","description":"com.apollographql.mockserver.awaitRequest","location":"apollo-mockserver/com.apollographql.mockserver/await-request.html","searchKeys":["awaitRequest","suspend fun MockServer.awaitRequest(timeout: Duration = 30.seconds): MockRequest","com.apollographql.mockserver.awaitRequest"]},{"name":"suspend fun MockServer.awaitWebSocketRequest(timeout: Duration = 30.seconds): WebsocketMockRequest","description":"com.apollographql.mockserver.awaitWebSocketRequest","location":"apollo-mockserver/com.apollographql.mockserver/await-web-socket-request.html","searchKeys":["awaitWebSocketRequest","suspend fun MockServer.awaitWebSocketRequest(timeout: Duration = 30.seconds): WebsocketMockRequest","com.apollographql.mockserver.awaitWebSocketRequest"]},{"name":"suspend fun awaitClose(timeout: Duration = 1.seconds)","description":"com.apollographql.mockserver.WebsocketMockRequest.awaitClose","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/await-close.html","searchKeys":["awaitClose","suspend fun awaitClose(timeout: Duration = 1.seconds)","com.apollographql.mockserver.WebsocketMockRequest.awaitClose"]},{"name":"suspend fun awaitMessage(timeout: Duration = 1.seconds): WebSocketMessage","description":"com.apollographql.mockserver.WebsocketMockRequest.awaitMessage","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/await-message.html","searchKeys":["awaitMessage","suspend fun awaitMessage(timeout: Duration = 1.seconds): WebSocketMessage","com.apollographql.mockserver.WebsocketMockRequest.awaitMessage"]},{"name":"suspend fun awaitMessageOrClose(timeout: Duration = 1.seconds): Result<WebSocketMessage>","description":"com.apollographql.mockserver.WebsocketMockRequest.awaitMessageOrClose","location":"apollo-mockserver/com.apollographql.mockserver/-websocket-mock-request/await-message-or-close.html","searchKeys":["awaitMessageOrClose","suspend fun awaitMessageOrClose(timeout: Duration = 1.seconds): Result<WebSocketMessage>","com.apollographql.mockserver.WebsocketMockRequest.awaitMessageOrClose"]},{"name":"val body: ByteString","description":"com.apollographql.mockserver.MockRequest.body","location":"apollo-mockserver/com.apollographql.mockserver/-mock-request/body.html","searchKeys":["body","val body: ByteString","com.apollographql.mockserver.MockRequest.body"]},{"name":"val body: Flow<ByteString>","description":"com.apollographql.mockserver.MockResponse.body","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/body.html","searchKeys":["body","val body: Flow<ByteString>","com.apollographql.mockserver.MockResponse.body"]},{"name":"val code: Int?","description":"com.apollographql.mockserver.CloseFrame.code","location":"apollo-mockserver/com.apollographql.mockserver/-close-frame/code.html","searchKeys":["code","val code: Int?","com.apollographql.mockserver.CloseFrame.code"]},{"name":"val data: ByteArray","description":"com.apollographql.mockserver.DataMessage.data","location":"apollo-mockserver/com.apollographql.mockserver/-data-message/data.html","searchKeys":["data","val data: ByteArray","com.apollographql.mockserver.DataMessage.data"]},{"name":"val delayMillis: Long","description":"com.apollographql.mockserver.MockResponse.delayMillis","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/delay-millis.html","searchKeys":["delayMillis","val delayMillis: Long","com.apollographql.mockserver.MockResponse.delayMillis"]},{"name":"val headers: Map<String, String>","description":"com.apollographql.mockserver.MockResponse.headers","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/headers.html","searchKeys":["headers","val headers: Map<String, String>","com.apollographql.mockserver.MockResponse.headers"]},{"name":"val hostname: String","description":"com.apollographql.mockserver.Address.hostname","location":"apollo-mockserver/com.apollographql.mockserver/-address/hostname.html","searchKeys":["hostname","val hostname: String","com.apollographql.mockserver.Address.hostname"]},{"name":"val keepAlive: Boolean","description":"com.apollographql.mockserver.MockResponse.keepAlive","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/keep-alive.html","searchKeys":["keepAlive","val keepAlive: Boolean","com.apollographql.mockserver.MockResponse.keepAlive"]},{"name":"val port: Int","description":"com.apollographql.mockserver.Address.port","location":"apollo-mockserver/com.apollographql.mockserver/-address/port.html","searchKeys":["port","val port: Int","com.apollographql.mockserver.Address.port"]},{"name":"val reason: String?","description":"com.apollographql.mockserver.CloseFrame.reason","location":"apollo-mockserver/com.apollographql.mockserver/-close-frame/reason.html","searchKeys":["reason","val reason: String?","com.apollographql.mockserver.CloseFrame.reason"]},{"name":"val statusCode: Int","description":"com.apollographql.mockserver.MockResponse.statusCode","location":"apollo-mockserver/com.apollographql.mockserver/-mock-response/status-code.html","searchKeys":["statusCode","val statusCode: Int","com.apollographql.mockserver.MockResponse.statusCode"]},{"name":"val text: String","description":"com.apollographql.mockserver.TextMessage.text","location":"apollo-mockserver/com.apollographql.mockserver/-text-message/text.html","searchKeys":["text","val text: String","com.apollographql.mockserver.TextMessage.text"]}]